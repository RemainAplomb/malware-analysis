; MASM Example - Delete Windows Registry Value

; includes
include \masm32\include\masm32rt.inc
include \masm32\include\windows.inc
include \masm32\include\advapi32.inc
includelib \masm32\lib\advapi32.lib

.data
target_key db "SOFTWARE\Microsoft\Windows\CurrentVersion\Run", 0  ; The registry key we're interested in.
valueName db "MyValue", 0  ; The name of the value we're setting.

hkey dd ?                        ; A handle to the opened key.

openError db "Error: Unable to open registry key.", 13, 10, 0
deleteError db "Error: Unable to delete registry value.", 13, 10, 0

.code
start:
    ; Open the registry key.
    ; We use RegOpenKeyEx function here, which opens the specified registry key and associates it with a handle that you can use in subsequent calls.
    ; To successfully open a key, an application must pass a key access mask that expresses the desired access rights to the key. We are using KEY_ALL_ACCESS, which combines the STANDARD_RIGHTS_ALL, KEY_QUERY_VALUE, KEY_SET_VALUE, KEY_CREATE_SUB_KEY, KEY_ENUMERATE_SUB_KEYS, KEY_NOTIFY, and KEY_CREATE_LINK access rights.
    push offset hkey          ; Variable that receives a handle to the opened key
    push KEY_ALL_ACCESS       ; Desired access rights to the key
    push 0                    ; Options parameter (Reserved, must be zero)
    push offset target_key    ; The name of the registry subkey to be opened
    push HKEY_CURRENT_USER    ; Handle to an open registry key
    call RegOpenKeyExA

    cmp eax, ERROR_SUCCESS
    jne printOpenError  ; If the key couldn't be opened, print an error message.

    ; Delete the value from the key.
    ; We use RegDeleteValue function here, which removes a named value from the specified registry key. 
    ; Note that value names are not case sensitive. To delete a value, you need to specify the handle of the key it is part of, and the name of the value.
    push offset valueName
    push hkey
    call RegDeleteValueA

    cmp eax, ERROR_SUCCESS
    jne printDeleteError  ; If the value couldn't be deleted, print an error message.

    jmp _cleanup

printOpenError:
    ; Print the error message for unable to open registry key.
    invoke StdOut, addr openError
    jmp _exit

printDeleteError:
    ; Print the error message for unable to delete registry value.
    invoke StdOut, addr deleteError
    jmp _exit

_cleanup:
    ; Close the key when we're done with it.
    ; We use RegCloseKey function here, which releases the handle of the specified registry key. 
    invoke RegCloseKey, hkey

_exit:
    ; Exit the process.
    ; We use ExitProcess function here, which ends the calling process and all its threads.
    invoke ExitProcess, 0
end start

