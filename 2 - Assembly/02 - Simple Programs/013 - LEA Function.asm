; LEA Instruction in Assembly Language

; importing masm32
include \masm32\include\masm32rt.inc

.model small  ; Define the memory model of our program.

.stack 100h   ; Define the size of the stack.

.data          ; Begin the data segment where variables are defined.

    var1 dw 10 
    var2 dw 20
    array dw 50 dup(0)  ; Define an array with 50 elements, all initially zero.

.code          ; Begin the code segment where our code is placed.

main proc      ; Start of a procedure

    ; Load the data segment into ds
    mov ax, @data   
    mov ds, ax

    ; Load 'var1' into ax and 'var2' into bx
    mov ax, var1
    mov bx, var2

    ; Here we use the LEA instruction to get the address of 'var1'
    ; and store it in bx
    lea bx, var1
    ; Now bx should contain the address of 'var1'

    ; LEA is often used with arrays, to get the address of an element
    ; For example, to get the address of the 10th element of 'array' in bx:
    lea bx, array[10]
    ; Now bx contains the address of the 10th element of 'array'

    ; End the program
    mov ax, 4C00h
    int 21h

main endp       ; End of the 'main' procedure
end main        ; End of the program
