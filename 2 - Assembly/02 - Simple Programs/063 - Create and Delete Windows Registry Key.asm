; MASM Example - Create and Delete a key in the Windows Registry

; includes
include \masm32\include\masm32rt.inc
include \masm32\include\windows.inc
include \masm32\include\advapi32.inc
includelib \masm32\lib\advapi32.lib

.data
target_key db "SOFTWARE\AAMyNewKey", 0  ; The registry key we're going to create and delete.

hkey dd ?                        ; A handle to the opened key.

openError db "Error: Unable to open or create registry key.", 13, 10, 0
deleteError db "Error: Unable to delete registry key.", 13, 10, 0
successMessage db "Program Successful", 13, 10, 0

.code
start:
    ; Create the registry key.
    ; HKEY_CURRENT_USER - handle to an open registry key
    ; target_key - pointer to a null-terminated string specifying the name of the key to be created
    ; 0 - Reserved, must be zero
    ; NULL - pointer to a null-terminated string specifying the object type of this key
    ; REG_OPTION_NON_VOLATILE - specifies special options for the key
    ; KEY_ALL_ACCESS - specifies the access rights for the key
    ; NULL - pointer to a SECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes
    ; hkey - pointer to a variable that receives a handle to the opened or created key
    ; NULL - pointer to a variable that receives the disposition value, which is determined whether the key was created or opened
    invoke RegCreateKeyEx, HKEY_CURRENT_USER, addr target_key, 0, NULL, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, NULL, addr hkey, NULL

    cmp eax, ERROR_SUCCESS
    jne printOpenError  ; If the key couldn't be created or opened, print an error message.

    ; Close the key when we're done with it.
    invoke RegCloseKey, hkey

    ; Now we're going to delete the key we just created.
    ; HKEY_CURRENT_USER - handle to an open registry key
    ; target_key - pointer to a null-terminated string that names the key to remove
    invoke RegDeleteKey, HKEY_CURRENT_USER, addr target_key

    cmp eax, ERROR_SUCCESS
    jne printDeleteError  ; If the key couldn't be deleted, print an error message.

    invoke StdOut, addr successMessage

_exit:
    ; Exit the process.
    invoke ExitProcess, 0

printOpenError:
    ; Print the error message for unable to open or create registry key.
    invoke StdOut, addr openError
    jmp _exit

printDeleteError:
    ; Print the error message for unable to delete registry key.
    invoke StdOut, addr deleteError
    jmp _exit
end start
