; MASM Example - Div Instruction

; includes
include \masm32\include\masm32rt.inc

.386
.model flat, stdcall
option casemap :none   ; case sensitive

include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
include \masm32\include\masm32.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\masm32.lib

.data
    quotient db 11 dup(0)  ; Declare a buffer of size 11 for quotient
    remainder db 11 dup(0)  ; Declare a buffer of size 11 for remainder
    newline db 13, 10, 0  ; Declare newline string

.code
start:
    mov eax, 42       ; Move the value 42 into EAX register
    mov ecx, 7        ; Move the value 7 into ECX register

    ; The DIV instruction performs unsigned division of two operands.
    ; Before the division operation, the dividend should be in the EDX:EAX registers. 
    ; As our dividend (42) is a 32-bit number, we should clear the EDX register to avoid any overflow issues.
    xor edx, edx      ; Clear EDX register

    ; Now, the EDX:EAX contains the dividend.
    ; The divisor is in the ECX register. The DIV instruction divides the content of EDX:EAX with ECX.
    ; The quotient is stored in EAX and the remainder in EDX.
    div ecx           ; EDX:EAX = EAX / ECX

    ; Now, EAX contains the quotient and EDX contains the remainder.
    invoke dwtoa, eax, addr quotient
    invoke StdOut, addr quotient
    invoke StdOut, addr newline

    invoke dwtoa, edx, addr remainder
    invoke StdOut, addr remainder
    invoke StdOut, addr newline

    invoke ExitProcess, 0
end start
