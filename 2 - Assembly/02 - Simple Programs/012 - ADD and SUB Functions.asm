; ADD and SUB Instructions in Assembly Language

; importing masm32
include \masm32\include\masm32rt.inc

.model small  ; Define the memory model of our program.

.stack 100h   ; Define the size of the stack.

.data          ; Begin the data segment where variables are defined.

    var1 dw 100 
    var2 dw 25
    sum dw ?    ; '?' denotes uninitialized data
    difference dw ?

.code          ; Begin the code segment where our code is placed.

main proc      ; Start of a procedure

    ; Load the data segment into ds
    mov ax, @data   
    mov ds, ax

    ; Load 'var1' into ax and 'var2' into bx
    mov ax, var1
    mov bx, var2

    ; Here we use the ADD instruction to add bx to ax
    ; AX will now hold the sum of var1 and var2
    add ax, bx
    ; Store the sum in 'sum'
    mov sum, ax  

    ; Now let's do a subtraction
    ; First we need to reload ax with 'var1', because it was changed in the previous addition
    mov ax, var1
    ; Here we use the SUB instruction to subtract bx from ax
    ; AX will now hold the difference of var1 and var2
    sub ax, bx
    ; Store the difference in 'difference'
    mov difference, ax  

    ; End the program
    mov ax, 4C00h
    int 21h

main endp       ; End of the 'main' procedure
end main        ; End of the program
