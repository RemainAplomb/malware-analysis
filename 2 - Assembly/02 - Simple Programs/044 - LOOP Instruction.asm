; MASM Example - Loop Instruction

; includes
include \masm32\include\masm32rt.inc

.386
.model flat, stdcall
option casemap :none

include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
includelib \masm32\lib\kernel32.lib

.data
buffer BYTE 12 dup(0)  ; Buffer for number string

.code
print PROC uses eax ecx edx pString:DWORD
    ; Print a string to the console
    invoke WriteFile, STD_OUTPUT_HANDLE, pString, lstrlenA(pString), addr bytesWritten, NULL
    ret
print ENDP

main PROC
    mov ecx, 10       ; Set counter to 10

start_loop:
    ; Convert the counter to string and store it in buffer
    lea eax, buffer
    invoke dwtoa, ecx, eax

    ; Call the print procedure to print the counter
    invoke print, addr buffer

    loop start_loop   ; Decrement counter and loop back if counter is not zero

    ; Terminate the process
    invoke ExitProcess, 0
main ENDP

end main
