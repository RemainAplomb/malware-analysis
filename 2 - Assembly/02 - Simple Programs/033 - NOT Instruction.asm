; includes
include \masm32\include\masm32rt.inc

; MASM NOT Instruction Example

.386
.model flat, stdcall
option casemap :none

include \masm32\include\windows.inc
include \masm32\include\kernel32.inc

includelib \masm32\lib\kernel32.lib

.data
    msg db "The inverted binary value is: ", 0
    buffer db 33 dup(?), 0  ; 32 bits + null terminator

.code

start:
    ; Let's use a simple number for demonstration
    mov eax, 7

    ; The NOT instruction performs a bitwise NOT operation on its operand, flipping all bits.
    ; If a bit in the operand is 1, it becomes 0 in the result. If a bit in the operand is 0, it becomes 1 in the result.
    not eax

    ; Print the result
    push eax
    push offset buffer
    call dwordToBinary
    add esp, 8  ; Clean up the stack

    push offset buffer
    push offset msg
    call print
    add esp, 8  ; Clean up the stack

    invoke ExitProcess, 0

print PROC msg:DWORD, val:DWORD
    push 0
    push val
    push msg
    push 0
    call MessageBoxA
    ret
print ENDP

dwordToBinary PROC val:DWORD, buffer:DWORD
    mov ecx, 32

nextBit:
    ; Get the rightmost bit of val
    mov eax, val
    and eax, 1

    ; Convert the bit to a character ('0' or '1') and store it in the buffer
    add al, '0'
    dec ecx
    mov [buffer + ecx], al

    ; Shift val right by one bit
    shr val, 1

    loop nextBit

    ret
dwordToBinary ENDP

end start
