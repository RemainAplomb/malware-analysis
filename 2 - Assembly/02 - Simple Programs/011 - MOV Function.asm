; MOV Instruction in Assembly Language

; importing masm32
include \masm32\include\masm32rt.inc

.model small  ; Define the memory model of our program.

.stack 100h   ; Define the size of the stack.

.data          ; Begin the data segment where variables are defined.

    var1 dw 10 
    var2 dw 20
    result dw ?  ; '?' denotes uninitialized data

.code          ; Begin the code segment where our code is placed.

main proc      ; Start of a procedure

    ; Load the data segment into ds
    mov ax, @data   
    mov ds, ax

    ; Load 'var1' into ax and 'var2' into bx
    mov ax, var1
    mov bx, var2
    ; Here we use the MOV instruction to transfer the contents of bx to ax
    mov ax, bx
    ; Now ax should have the value of bx, which is the value of 'var2'
    ; Store the value in 'result'
    mov result, ax  

    ; End the program
    mov ax, 4C00h
    int 21h

main endp       ; End of the 'main' procedure
end main        ; End of the program
