; MASM Example - Set a value in the Windows Registry and then enumerate the key to verify

; includes
include \masm32\include\masm32rt.inc
include \masm32\include\windows.inc
include \masm32\include\advapi32.inc
includelib \masm32\lib\advapi32.lib

.data
target_key db "SOFTWARE\Microsoft\Windows\CurrentVersion\Run", 0  ; The registry key we're interested in.
valueName db "MyValue", 0  ; The name of the value we're setting.
valueData db "MyData", 0   ; The data for the value we're setting.

hkey dd ?                        ; A handle to the opened key.
index dd 0                       ; The index of the value we want to retrieve.
buffer db 256 dup(0)             ; Buffer for the value data.
bufferSize dd 256                ; Size of the buffer.
data_type dd 0                   ; Type of the data.

openError db "Error: Unable to open or create registry key.", 13, 10, 0
setError db "Error: Unable to set registry value.", 13, 10, 0

.code
start:
    ; Create or open the registry key.
    push 0                      ; lpdwDisposition - optional pointer to a variable that receives the disposition value
    push offset hkey            ; phkResult - pointer to a variable that receives a handle to the opened or created key
    push 0                      ; lpSecurityAttributes - pointer to a SECURITY_ATTRIBUTES structure, can be NULL
    push KEY_ALL_ACCESS         ; samDesired - access mask that specifies the access rights for the key to be created
    push REG_OPTION_NON_VOLATILE; dwOptions - specifies special options for the key
    push 0                      ; lpClass - pointer to a null-terminated string specifying the object type of this key
    push 0                      ; Reserved - this parameter is reserved and must be zero
    push offset target_key      ; lpSubKey - pointer to a null-terminated string specifying the name of the key to be opened or created
    push HKEY_CURRENT_USER      ; hKey - handle to an open registry key
    call RegCreateKeyEx

    cmp eax, ERROR_SUCCESS
    jne printOpenError  ; If the key couldn't be created or opened, print an error message.

    ; Set a value in the key.
    push 6             ; cbData - size of valueData (5 characters + 1 null character)
    push offset valueData  ; lpData - the data to be stored
    push REG_SZ        ; dwType - The type of data pointed to by the lpData parameter
    push 0             ; Reserved - this parameter is reserved and must be zero
    push offset valueName  ; lpValueName - The name of the value to be set
    push hkey          ; hKey - handle to an open registry key
    call RegSetValueEx

    cmp eax, ERROR_SUCCESS
    jne printSetError  ; If the value couldn't be set, print an error message.

_enumerate:
    ; Initialize the size of bufferSize for each iteration.
    mov bufferSize, 256

    ; Try to retrieve the value that we set earlier.
    push offset bufferSize
    push offset buffer
    push offset data_type
    push 0
    push offset bufferSize
    push offset valueName
    push index
    push hkey
    call RegEnumValue

    ; Check if the operation was successful.
    cmp eax, ERROR_SUCCESS
    jne _cleanup  ; If the value couldn't be retrieved, cleanup and exit.

    ; The value was retrieved successfully. For now, just print the value.
    ; In a real application, you could do something more useful with this data.
    invoke StdOut, addr buffer

    ; Increment the index and try to retrieve the next value.
    inc index
    jmp _enumerate

printOpenError:
    ; Print the error message for unable to open or create registry key.
    invoke StdOut, addr openError
    jmp _exit

printSetError:
    ; Print the error message for unable to set registry value.
    invoke StdOut, addr setError
    jmp _exit

_cleanup:
    ; Close the key when we're done with it.
    invoke RegCloseKey, hkey

_exit:
    ; Exit the process.
    invoke ExitProcess, 0
end start
