; MASM Example - Windows Registry
; includes
include \masm32\include\masm32rt.inc

.386
.model flat, stdcall
option casemap :none 

include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
include \masm32\include\user32.inc
include \masm32\include\advapi32.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\user32.lib
includelib \masm32\lib\advapi32.lib
include \masm32\include\masm32.inc
includelib \masm32\lib\masm32.lib

.data
    ; Define constants for registry path and key
    subKey db "SOFTWARE\\Microsoft\\Windows\\CurrentVersion", 0
    valueName db "ProgramFilesDir", 0
    keyValue db 260 dup(0) ; buffer for the value
    hKey dd ? ; variable to store the handle of the opened key
    dwSize dd 260 ; size of keyValue buffer
    dwType dd ? ; variable to store the type of the data
    successMessage db "Operation was successful.", 13, 10, 0
    errorMessage db "Operation failed.", 13, 10, 0

.code
start:
    ; Open the registry key
    invoke RegOpenKeyEx, HKEY_LOCAL_MACHINE, addr subKey, 0, KEY_READ, addr hKey
    cmp eax, ERROR_SUCCESS
    jne open_error

    invoke StdOut, addr successMessage ; Print success message
    jmp after_open_error

open_error:
    invoke StdOut, addr errorMessage ; Print error message

after_open_error:

    ; Query the value of the key
    invoke RegQueryValueEx, hKey, addr valueName, NULL, addr dwType, addr keyValue, addr dwSize
    cmp eax, ERROR_SUCCESS
    jne query_error

    invoke StdOut, addr successMessage ; Print success message
    jmp after_query_error

query_error:
    invoke StdOut, addr errorMessage ; Print error message

after_query_error:

    ; Print the value to the console
    invoke StdOut, addr keyValue

    ; Close the key handle
    invoke RegCloseKey, hKey

    ; Terminate the process
    invoke ExitProcess, 0

end start


