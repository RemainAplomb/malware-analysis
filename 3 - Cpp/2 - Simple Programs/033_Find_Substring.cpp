#include <iostream>
#include <string>
#include <algorithm>
#include <vector>

// Function to check if the URL contains malicious keywords
bool isMaliciousLink(const std::string& url) {
    // List of suspicious keywords
    std::vector<std::string> maliciousKeywords = {
        "malware", "phishing", "spam", "hacking", "virus"
        // Add more keywords as needed
    };

    // Convert the URL to lowercase for case-insensitive comparison
    std::string lowercaseURL = url;
    std::transform(lowercaseURL.begin(), lowercaseURL.end(), lowercaseURL.begin(), ::tolower);

    // Check if any malicious keyword exists in the URL
    for (const std::string& keyword : maliciousKeywords) {
        if (lowercaseURL.find(keyword) != std::string::npos) {
            return true; // Malicious keyword found
        }
    }

    return false; // No malicious keywords found
}

int main() {
    std::string url;

    std::cout << "Enter the link to check: ";
    std::cin >> url;

    if (isMaliciousLink(url)) {
        std::cout << "The link is suspicious and might be malicious." << std::endl;
    } else {
        std::cout << "The link appears to be safe." << std::endl;
    }

    return 0;
}
