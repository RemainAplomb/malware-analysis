#include <iostream>
#include <string>
#include <cctype>
#include <unordered_set>

// Function to check if a character is a vowel
bool isVowel(char ch) {
    ch = std::tolower(ch);
    return (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u');
}

// Function to check if a word is speakable
bool isSpeakableWord(const std::string& word) {
    // Rule 1: The word must contain at least one vowel
    bool hasVowel = false;
    for (char ch : word) {
        if (isVowel(ch)) {
            hasVowel = true;
            break;
        }
    }
    if (!hasVowel) {
        return false;
    }

    // Rule 2: The word must not contain three consecutive consonants
    int consecutiveConsonants = 0;
    for (char ch : word) {
        if (std::isalpha(ch) && !isVowel(ch)) {
            consecutiveConsonants++;
            if (consecutiveConsonants >= 3) {
                return false;
            }
        } else {
            consecutiveConsonants = 0;
        }
    }

    // Rule 3: The word must not contain three consecutive vowels
    int consecutiveVowels = 0;
    for (char ch : word) {
        if (isVowel(ch)) {
            consecutiveVowels++;
            if (consecutiveVowels >= 3) {
                return false;
            }
        } else {
            consecutiveVowels = 0;
        }
    }

    // Rule 4: The word must not contain two consecutive identical characters
    for (int i = 1; i < word.length(); i++) {
        if (word[i] == word[i - 1]) {
            return false;
        }
    }

    // Rule 5: The word must not be a common English preposition or article
    static const std::unordered_set<std::string> commonWords = {"the", "and", "of", "to", "in", "for", "on", "with"};
    if (commonWords.find(word) != commonWords.end()) {
        return false;
    }

    // If all rules pass, the word is speakable
    return true;
}

int main() {
    std::string word;

    std::cout << "Enter a word to check if it is speakable: ";
    std::cin >> word;

    if (isSpeakableWord(word)) {
        std::cout << "The word is speakable." << std::endl;
    } else {
        std::cout << "The word is not speakable." << std::endl;
    }

    return 0;
}
