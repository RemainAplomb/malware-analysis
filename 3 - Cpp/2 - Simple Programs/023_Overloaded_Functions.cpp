#include<iostream>

// Version 1: Accepts price and percentage discount
double calculate_discount(double price, double percent_discount) {
    // We calculate the discount amount by multiplying the price by the percent_discount divided by 100.
    double discount = price * (percent_discount / 100);
    return price - discount; // We then subtract this discount from the price and return the result.
}

// Version 2: Accepts price and fixed discount
double calculate_discount(double price, int fixed_discount) {
    // For a fixed discount, we simply subtract the discount from the price.
    return price - fixed_discount;
}

// Version 3: Accepts price, percentage discount, and fixed discount
double calculate_discount(double price, double percent_discount, int fixed_discount) {
    // First, we apply the percentage discount
    price = calculate_discount(price, percent_discount);
    // Then, we apply the fixed discount
    return calculate_discount(price, fixed_discount);
}

int main() {
    // This demonstrates function overloading: we have three functions with the same name, but different parameter lists. 
    // The compiler is able to tell which one we want to use based on the arguments we provide when we call the function.
    
    // Remember, the function signature in C++ involves both the function name and the types of its parameters. 
    // Two functions can have the same name as long as their parameter lists differ in either the number or the 
    // type of parameters.
    
    // So when you call calculate_discount(100.0, 20.0), the compiler uses the version of calculate_discount that 
    // takes a double and another double. When you call calculate_discount(100.0, 15), it uses the version that takes 
    // a double and an int. And when you call calculate_discount(100.0, 20.0, 15), it uses the version that takes a 
    // double, another double, and an int.

    std::cout << "Discounted price (version 1): " << calculate_discount(100.0, 20.0) << "\n"; // Output: 80
    std::cout << "Discounted price (version 2): " << calculate_discount(100.0, 15) << "\n"; // Output: 85
    std::cout << "Discounted price (version 3): " << calculate_discount(100.0, 20.0, 15) << "\n"; // Output: 65
    return 0;
}
