#include <iostream>
#include <string>

// for std::setprecision and std::fixed
// We've also included the <iomanip> library to use the std::setprecision and std::fixed manipulators,
// which ensure that the account balance and transaction amounts are always displayed with two decimal
// places, as is typical for financial transactions.
#include <iomanip>

int main()
{
    // Declare variables for the user's name, balance, transaction amount, and transaction type.
    std::string name;
    double balance = 0.0, amount;
    char transactionType;

    // Greet the user and get their name.
    std::cout << "Welcome to Simple Bank! What's your name? ";
    std::getline(std::cin, name);

    // Print a personalized greeting.
    std::cout << "Hello, " << name << "! Let's get started.\n";

    while (true)
    {
        // Display their current balance.
        std::cout << "\nYour current balance is $" << std::setprecision(2) << std::fixed << balance << ".\n";

        // Ask the user what kind of transaction they'd like to make.
        std::cout << "Enter 'd' for deposit, 'w' for withdrawal, or 'q' to quit: ";
        std::cin >> transactionType;

        if (transactionType == 'q')
        {
            std::cout << "Goodbye, " << name << "!\n";
            break;
        }

        // Ask the user how much they'd like to deposit or withdraw.
        std::cout << "Enter the amount: ";
        std::cin >> amount;

        if (transactionType == 'd')
        {
            balance += amount; // Deposit
            std::cout << "Successfully deposited $" << std::setprecision(2) << std::fixed << amount << ".\n";
        }
        else if (transactionType == 'w')
        {
            if (balance < amount)
            {
                std::cout << "Sorry, you have insufficient funds.\n";
            }
            else
            {
                balance -= amount; // Withdraw
                std::cout << "Successfully withdrew $" << std::setprecision(2) << std::fixed << amount << ".\n";
            }
        }
        else
        {
            std::cout << "Invalid transaction type. Please try again.\n";
        }
    }

    return 0;
}
